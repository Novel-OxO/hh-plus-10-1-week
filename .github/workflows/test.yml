name: 🧪 CI/CD Pipeline

on:
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  lint-and-test:
    name: 🔍 Lint & Test
    runs-on: ubuntu-latest

    steps:
      - name: 📦 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🚀 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: 📥 Install Dependencies
        run: npm ci

      - name: 🔎 Run ESLint
        run: npm run lint

      - name: 🧪 Run Tests with Coverage
        run: npm run test:coverage

      - name: 📊 Comment Test Results on PR
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const testResult = '${{ job.status }}';

            let coverageSummary = '';
            try {
              const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json', 'utf8'));
              const total = coverage.total;
              coverageSummary = '\n### 📊 Coverage Summary\n\n' +
                '| Metric | Coverage |\n' +
                '|--------|----------|\n' +
                `| 🔵 Statements | ${total.statements.pct}% (${total.statements.covered}/${total.statements.total}) |\n` +
                `| 🟢 Branches | ${total.branches.pct}% (${total.branches.covered}/${total.branches.total}) |\n` +
                `| 🟡 Functions | ${total.functions.pct}% (${total.functions.covered}/${total.functions.total}) |\n` +
                `| 🟠 Lines | ${total.lines.pct}% (${total.lines.covered}/${total.lines.total}) |\n`;
            } catch (e) {
              coverageSummary = '\n_Coverage report not available_\n';
            }

            const statusEmoji = testResult === 'success' ? '✅' : '❌';
            const statusText = testResult === 'success' ? 'All tests passed!' : 'Some tests failed';

            const comment = `## ${statusEmoji} CI/CD Pipeline Results\n\n` +
              `### ${statusEmoji} ${statusText}\n` +
              coverageSummary +
              '\n---\n\n' +
              '<details>\n' +
              '<summary>📝 Build Details</summary>\n\n' +
              `- **Workflow**: ${context.workflow}\n` +
              `- **Status**: \`${testResult}\`\n` +
              `- **Commit**: [\`${context.sha.substring(0, 7)}\`](${context.payload.pull_request.head.repo.html_url}/commit/${context.sha})\n` +
              `- **Author**: @${context.payload.pull_request.user.login}\n` +
              `- **Run**: [#${context.runNumber}](${context.payload.repository.html_url}/actions/runs/${context.runId})\n\n` +
              '</details>\n\n' +
              '---\n' +
              '_🤖 Automated by GitHub Actions_';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
